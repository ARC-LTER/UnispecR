names(df_analysis)
df_analysis %>% filter(Site == "LMAT", Date == "2019-08-16") %>% select(Date, Site, Block, Treatment, ScanRep, Plot.y) %>%  print(n=400)
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
group = ScanRep,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point() +
geom_line(aes(group=c(Spot))) +
facet_grid(Site ~ Block)
ggplotly(plot)
shiny_dataframe
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
group = Replicate,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point() +
geom_line(aes(group=c(Spot))) +
facet_grid(Site ~ Block)
ggplotly(plot)
shiny_dataframe %>% filter(Site == "MAT06", Date == "2019-08-16")   print(n=400)
shiny_dataframe %>% filter(Site == "MAT06", Date == "2019-08-16")  %>%  print(n=400)
# Subset of Data for Shiny Visualization
(
shiny_dataframe <- index_data %>%
select(-BandDefinition) %>%
spread(Index, Value) %>%
left_join(unispec_file_key) %>%
# Check for tag
#filter(str_detect(ScanLocation, pattern = "[0-9]S")) %>%
# Format for shiny
rename(Replicate = ScanRep) %>%
select(DateTime, Date, Site, Block, Treatment, Replicate, FileNum, NDVI, EVI, EVI2, Plot.y) %>%
mutate(Year = lubridate::year(DateTime),
# Date = lubridate::ymd(Date),
DOY = lubridate::yday(DateTime)) %>%
rename(Time = DateTime) %>%
mutate(Block = as.numeric(str_extract(Block, "\\d"))) %>%
mutate(Replicate = as.character(Replicate)) %>%
# Standardize Site names from 2019 version to 2020 onwards
mutate(Site = ifelse(Site %in% c("WSG1", "WSG23"), "WSG89", Site))  %>%
mutate(Site = ifelse(Site %in% c("DHT"), "DHT89", Site)) %>%
mutate(Site = ifelse(Site %in% c("MAT"), "MAT89", Site)) %>%
mutate(Site = ifelse(Site %in% c("LMAT"), "MAT06", Site)) %>%
mutate(Site = ifelse(Site %in% c("HIST"), "DHT89", Site)) %>%
mutate(Site = ifelse(Site %in% c("SHB2"), "SHB89", Site)) %>%
mutate(Site = ifelse(Site %in% c("MNAT"), "MNT97", Site)) %>%
mutate(Site = ifelse(Site %in% c("NANT"), "MNN97", Site))
)
plot_data <- shiny_dataframe %>%
plot_data <- shiny_dataframe %>%
plot_data <- shiny_dataframe %>%
shiny_dataframe
mutate(Spot = paste0(Treatment, "_", Plot.y))
shiny_dataframe
plot_data <- shiny_dataframe %>%
# Subset of Data for Shiny Visualization
(
shiny_dataframe <- index_data %>%
select(-BandDefinition) %>%
spread(Index, Value) %>%
left_join(unispec_file_key) %>%
# Check for tag
#filter(str_detect(ScanLocation, pattern = "[0-9]S")) %>%
# Format for shiny
rename(Replicate = ScanRep) %>%
select(DateTime, Date, Site, Block, Treatment, Replicate, FileNum, NDVI, EVI, EVI2, Plot.y) %>%
mutate(Year = lubridate::year(DateTime),
# Date = lubridate::ymd(Date),
DOY = lubridate::yday(DateTime)) %>%
rename(Time = DateTime) %>%
mutate(Block = as.numeric(str_extract(Block, "\\d"))) %>%
mutate(Replicate = as.character(Replicate)) %>%
# Standardize Site names from 2019 version to 2020 onwards
mutate(Site = ifelse(Site %in% c("WSG1", "WSG23"), "WSG89", Site))  %>%
mutate(Site = ifelse(Site %in% c("DHT"), "DHT89", Site)) %>%
mutate(Site = ifelse(Site %in% c("MAT"), "MAT89", Site)) %>%
mutate(Site = ifelse(Site %in% c("LMAT"), "MAT06", Site)) %>%
mutate(Site = ifelse(Site %in% c("HIST"), "DHT89", Site)) %>%
mutate(Site = ifelse(Site %in% c("SHB2"), "SHB89", Site)) %>%
mutate(Site = ifelse(Site %in% c("MNAT"), "MNT97", Site)) %>%
mutate(Site = ifelse(Site %in% c("NANT"), "MNN97", Site))
)
plot_data <- shiny_dataframe %>%
filter(Site == "MAT06",Treatment %in% c("CT", "F10")),
mutate(Spot = paste0(Treatment, "_", Plot.y))
plot_data <- shiny_dataframe %>%
filter(Site == "MAT06",Treatment %in% c("CT", "F10")) %>%
mutate(Spot = paste0(Treatment, "_", Plot.y))
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
group = Replicate,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point() +
geom_line(aes(group=c(Spot))) +
facet_grid(Site ~ Block)
ggplotly(plot)
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
group = Replicate,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point() +
geom_line(aes(group=c(Spot))) +
facet_grid(Replicate ~ Block)
ggplotly(plot)
1:10
plot_data <- shiny_dataframe %>%
filter(Site == "MAT06",Treatment %in% c("CT", "F10")) %>%
filter(Replicate %in% c(1:10)) %>%
mutate(Spot = paste0(Treatment, "_", Plot.y))
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
group = Replicate,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point() +
geom_line(aes(group=c(Spot))) +
facet_grid(Replicate ~ Block)
ggplotly(plot)
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
group = Replicate,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point() +
geom_line(aes(group=c(Spot))) +
facet_grid(Plot.y ~ Block)
ggplotly(plot)
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
group = Replicate,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point() +
geom_line(aes(group=c(Spot))) +
geom_smooth() +
facet_grid(Plot.y ~ Block)
ggplotly(plot)
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
group = Replicate,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point() +
geom_line(aes(group=c(Spot))) +
geom_smooth() +
facet_grid(Site ~ Block)
ggplotly(plot)
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point() +
geom_smooth() +
geom_line(aes(group=c(Spot))) +
facet_grid(Site ~ Block)
ggplotly(plot)
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point() +
geom_smooth() +
geom_line(aes(group=c(Spot))) +
facet_grid(Site ~ Block)
ggplotly(plot)
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point() +
geom_line(aes(group=c(Spot))) +
facet_grid(Site ~ Block)
ggplotly(plot)
library(tidyverse)
library(lubridate)
library(rChoiceDialogs)
library(knitr)
library(plotly)
knitr::opts_chunk$set()
## use the params$data_path as starting folder. DATA PATH should be to UNISPEC DATA folder. The files should be read-in from there. This should match the One-Drive file format.
data_path <- params$data_path
## Load 2019 data from files
dir_year <- "2019"
## Raw Data
raw_filename <- paste0(data_path, dir_year, "_raw_spu_data.rds")
spu_spectra <- read_rds(raw_filename)
# Raw Metadata
raw_keyname <- paste0(data_path, dir_year, "_raw_spu_metadata.csv")
spu_key <- read_csv(raw_keyname) %>% mutate(DateTime = with_tz(DateTime, "US/Alaska"))
## Processed Data
processed_filename <- paste0(data_path, dir_year, "_processed_spu_data.rds")
processed_spectra <- read_rds(processed_filename)
## Index Data
index_filename <- paste0(data_path, dir_year, "_index_data.csv")
index_data <- read_csv(index_filename) %>% mutate(DateTime = with_tz(DateTime, "US/Alaska"))
## File Key
key_filename <- paste0(data_path, dir_year, "_unispec_file_key.csv")
unispec_file_key <- read_csv(key_filename, skip_empty_rows = T)
## Summary File
df_analysis <- read_rds(paste0(data_path, dir_year,"_unispec_data_summary.rds"))
## This chunk of code tallies the number of files in the raw, processed, and index data dataframes and displays the output in a table.
## Raw Data summary
spu_dataframe <- full_join(spu_spectra, spu_key) %>%
mutate(DateTime = with_tz(DateTime, "US/Alaska")) %>%
# Add Date & ARC-LTER Site
mutate(Date = lubridate::date(DateTime)) %>%
mutate(Site = str_extract(spu_filename, "([A-Z]{3,8}[0-9]*)(?=_)")) %>% # DOES NOT WORK FOR "MAT-SH" measurements
mutate(Site = ifelse(str_detect(spu_filename, "MAT-SH"), "MAT-SH", Site))
raw_files <- spu_dataframe %>%   group_by(Date, Site) %>%
summarize(Raw_Files = n_distinct(spu_filename))
## Processed Data summary
processed_files <- left_join(processed_spectra, spu_key) %>%
# Add Date & ARC-LTER Site
mutate(DateTime = with_tz(DateTime, "US/Alaska")) %>%
mutate(Date = lubridate::date(DateTime)) %>%
mutate(Site = str_extract(spu_filename, "([A-Z]{3,8}[0-9]*)(?=_)")) %>% # DOES NOT WORK FOR "MAT-SH" measurements
mutate(Site = ifelse(str_detect(spu_filename, "MAT-SH"), "MAT-SH", Site)) %>%
## Summarize
group_by(Date, Site) %>%
summarize(Processed_Files = n_distinct(spu_filename))
## Index Data summary
index_files <- left_join(index_data, spu_key) %>%
# Add Date & ARC-LTER Site
mutate(DateTime = with_tz(DateTime, "US/Alaska")) %>%
mutate(Date = lubridate::date(DateTime)) %>%
mutate(Site = str_extract(spu_filename, "([A-Z]{3,8}[0-9]*)(?=_)")) %>% # DOES NOT WORK FOR "MAT-SH" measurements
mutate(Site = ifelse(str_detect(spu_filename, "MAT-SH"), "MAT-SH", Site)) %>%
## Summarize
group_by(Date, Site) %>%
summarize(Index_Files = n_distinct(spu_filename))
## DISPLAY
kable(full_join(raw_files, processed_files) %>% full_join(index_files) %>% arrange(Date, Site))
# Subset of Data for Shiny Visualization
(
shiny_dataframe <- index_data %>%
select(-BandDefinition) %>%
spread(Index, Value) %>%
left_join(unispec_file_key) %>%
# Check for tag
#filter(str_detect(ScanLocation, pattern = "[0-9]S")) %>%
# Format for shiny
rename(Replicate = ScanRep) %>%
select(DateTime, Date, Site, Block, Treatment, Replicate, FileNum, NDVI, EVI, EVI2, Plot.y) %>%
mutate(Year = lubridate::year(DateTime),
# Date = lubridate::ymd(Date),
DOY = lubridate::yday(DateTime)) %>%
rename(Time = DateTime) %>%
mutate(Block = as.numeric(str_extract(Block, "\\d"))) %>%
mutate(Replicate = as.character(Replicate)) %>%
# Standardize Site names from 2019 version to 2020 onwards
mutate(Site = ifelse(Site %in% c("WSG1", "WSG23"), "WSG89", Site))  %>%
mutate(Site = ifelse(Site %in% c("DHT"), "DHT89", Site)) %>%
mutate(Site = ifelse(Site %in% c("MAT"), "MAT89", Site)) %>%
mutate(Site = ifelse(Site %in% c("LMAT"), "MAT06", Site)) %>%
mutate(Site = ifelse(Site %in% c("HIST"), "DHT89", Site)) %>%
mutate(Site = ifelse(Site %in% c("SHB2"), "SHB89", Site)) %>%
mutate(Site = ifelse(Site %in% c("MNAT"), "MNT97", Site)) %>%
mutate(Site = ifelse(Site %in% c("NANT"), "MNN97", Site))
)
plot_data <- shiny_dataframe %>%
filter(Site == "MAT06",Treatment %in% c("CT", "F10")) %>%
filter(Replicate %in% c(1:10)) %>%
mutate(Spot = paste0(Treatment, "_", Plot.y))
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point() +
geom_line(aes(group=c(Spot))) +
facet_grid(Site ~ Block)
ggplotly(plot)
plot_data <- shiny_dataframe %>%
filter(Site == "MAT06",Treatment %in% c("CT", "F10")) %>%
filter(Replicate %in% c(1:10)) %>%
filter(Plot.y > 9 && Plot.y < 17) %>%
mutate(Spot = paste0(Treatment, "_", Plot.y))
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point() +
geom_line(aes(group=c(Spot))) +
facet_grid(Site ~ Block)
ggplotly(plot)
plot_data <- shiny_dataframe %>%
filter(Site == "MAT06",Treatment %in% c("CT", "F10")) %>%
filter(Replicate %in% c(1:10)) %>%
filter(Plot.y > 9 && Plot.y < 17) %>%
filter(!is.na(Plot.y)) %>%
mutate(Spot = paste0(Treatment, "_", Plot.y))
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point() +
geom_line(aes(group=c(Spot))) +
facet_grid(Site ~ Block)
ggplotly(plot)
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point() +
geom_smooth() +
geom_line(aes(group=c(Spot))) +
facet_grid(Site ~ Block)
ggplotly(plot)
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point() +
geom_smooth(aes(group=Block)) +
geom_line(aes(group=c(Spot))) +
facet_grid(Site ~ Block)
ggplotly(plot)
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point() +
geom_smooth(aes(group=Treatment)) +
geom_line(aes(group=c(Spot))) +
facet_grid(Site ~ Block)
ggplotly(plot)
plot_data <- shiny_dataframe %>%
filter(Site == "MAT06",Treatment %in% c("CT", "F10")) %>%
filter(Replicate %in% c(1:10)) %>%
filter(Plot.y > 9 && Plot.y < 17) %>%
mutate(Spot = paste0(Treatment, "_", Plot.y))
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point() +
geom_smooth(aes(group=Treatment)) +
geom_line(aes(group=c(Spot))) +
facet_grid(Site ~ Block)
plot
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point(aes(alpha = 0.5)) +
geom_smooth(aes(group=Treatment)) +
geom_line(aes(group=c(Spot), aes=0.5)) +
facet_grid(Site ~ Block)
plot
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point(aes(alpha = 0.8)) +
geom_smooth(aes(group=Treatment)) +
geom_line(aes(group=c(Spot), aes=0.8)) +
facet_grid(Site ~ Block)
plot
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point(aes(alpha = 0.2)) +
geom_smooth(aes(group=Treatment)) +
geom_line(aes(group=c(Spot), aes=0.2)) +
facet_grid(Site ~ Block)
plot
ggplotly(plot)
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point(aes(alpha = 0.2)) +
geom_smooth(aes(group=Treatment)) +
geom_line(aes(group=c(Spot), alpha=0.2)) +
facet_grid(Site ~ Block)
plot
ggplotly(plot)
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point(aes(alpha = 0.2)) +
geom_line(aes(group=c(Spot), alpha=0.2)) +
geom_smooth(aes(group=Treatment)) +
facet_grid(Site ~ Block)
plot
ggplotly(plot)
plot_data <- shiny_dataframe %>%
filter(Site %in% c("MAT06", "MAT89"),Treatment %in% c("CT", "F10", "NP")) %>%
filter(Replicate %in% c(1:10)) %>%
filter(Plot.y > 9 && Plot.y < 17) %>%
mutate(Spot = paste0(Treatment, "_", Plot.y))
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point(aes(alpha = 0.2)) +
geom_line(aes(group=c(Spot), alpha=0.2)) +
geom_smooth(aes(group=Treatment)) +
facet_grid(Site ~ Block)
plot
plot_data <- shiny_dataframe %>%
filter(Site %in% c("MAT06", "MAT89"),Treatment %in% c("CT", "CT1", "CT2" "F10", "NP")) %>%
filter(Replicate %in% c(1:10)) %>%
filter(Plot.y > 9 && Plot.y < 17) %>%
mutate(Spot = paste0(Treatment, "_", Plot.y))
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point(aes(alpha = 0.2)) +
geom_line(aes(group=c(Spot), alpha=0.2)) +
geom_smooth(aes(group=Treatment)) +
facet_grid(Site ~ Block)
plot
ggplotly(plot)
plot_data <- shiny_dataframe %>%
filter(Site %in% c("MAT06", "MAT89"),Treatment %in% c("CT", "CT1", "CT2", "F10", "NP")) %>%
filter(Replicate %in% c(1:10)) %>%
filter(Plot.y > 9 && Plot.y < 17) %>%
mutate(Spot = paste0(Treatment, "_", Plot.y))
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point(aes(alpha = 0.2)) +
geom_line(aes(group=c(Spot), alpha=0.2)) +
geom_smooth(aes(group=Treatment)) +
facet_grid(Site ~ Block)
plot
ggplotly(plot)
shiny_dataframe
plot_data
plot_data <- shiny_dataframe %>%
filter(Site %in% c("MAT06"),Treatment %in% c("CT", "CT1", "CT2", "F10", "NP")) %>%
filter(Replicate %in% c(1:10)) %>%
filter(Plot.y > 9 && Plot.y < 17) %>% # original 5 measurement
mutate(Spot = paste0(Treatment, "_", Plot.y))
plot <- ggplot(data = plot_data, aes(x = DOY,
y = NDVI,
color = Treatment,
text = paste(
"Location: ", Plot.y, "\n",
sep = ""))) +
geom_point(aes(alpha = 0.2)) +
geom_line(aes(group=c(Spot), alpha=0.2)) +
geom_smooth(aes(group=Treatment)) +
facet_grid(Site ~ Block)
plot
ggplotly(plot)
ggplotly(plot)
plot
ggplotly(plot)
plot
ggplotly(plot)
ggplotly(plot)
