zero_data <- df %>% inner_join(spu_dataframe %>% select(spu_filename)) %>% unnest(Spectra) %>%
filter(ChA == 0) %>%  ## This is for all wavelengths, not just 400-1000nm
group_by(spu_filename) %>%
summarize(Zeros = n()) %>%
left_join(df)
## Summary
zero_data %>% group_by(Date, Site) %>%
summarize(Treatments = str_c(str_replace_na(unique(Treatment)), collapse = ","),
Files = n(),
Max_Zeros = max(Zeros)) %>%
kable()
## File List : Restricted Wavelengths
zero_files <- zero_data %>% unnest(Spectra) %>%
filter(ChA == 0 ) %>%
filter(Wavelength > 400, Wavelength < 1000) %>%
pull(spu_filename) %>% unique()
zero_data_narrowed <- df %>% filter(spu_filename %in% zero_files)
## Plot Exploration
zero_data_narrowed %>%
slice(1:5) %>% plot_channels()
## Summary
zero_data_narrowed %>% group_by(Date, Site) %>%
summarize(Treatments = str_c(str_replace_na(unique(Treatment)), collapse = ","), Files = n())  %>%
kable()
## Raw Spectra
absurd_raw_data <- df %>%
filter(! Spectra %>% map(is.null) %>% map_lgl(any)) %>% # remove files w/out spu_spectra
filter(!str_detect(Treatment, "REF")) %>% # ignore REF files
unnest(Spectra) %>% # use raw spectra
filter(Wavelength > 400 & Wavelength < 1000) %>%
filter(Reflectance > 1) %>%
nest(Wavelength, ChA, ChB, Reflectance, .key = Spectra)
absurd_raw_files <- absurd_raw_data$spu_filename
absurd_raw_data %>% group_by(Date, Site) %>%
summarize(Treatments = str_c(unique(Treatment), collapse = ","), Files = n())
## Corrected Spectra
absurd_data <- df_corrected %>%
filter(!str_detect(Treatment, "REF")) %>% # ignore REF files
# filter(!spu_filename %in% unprocessed_spu_files) %>% # leave out missing multispec data
unnest(processed_spectra) %>% # use corrected spectra
select(-(ChB:raw_reflectance)) %>%  # remove unnecessary Wavelength specific rows
filter(Wavelength > 400 & Wavelength < 1000) %>%
filter(corrected_reflectance > 1) %>%
nest(Wavelength, corrected_reflectance, .key = corrected_spectra)
## Summary
absurd_data %>% group_by(Date, Site) %>%
summarize(Treatments = str_c(str_replace_na(unique(Treatment)), collapse = ","), Files = n())  %>%
kable()
## File List
absurd_files <- absurd_data$spu_filename
## Plot Check
absurd_data %>%
inner_join(spu_data) %>%
slice(1:10) %>%
plot_channels()
## Raw Spectra
absurd_raw_data <- df %>%
filter(! Spectra %>% map(is.null) %>% map_lgl(any)) %>% # remove files w/out spu_spectra
filter(!str_detect(Treatment, "REF")) %>% # ignore REF files
unnest(Spectra) %>% # use raw spectra
filter(Wavelength > 400 & Wavelength < 1000) %>%
filter(Reflectance > 1) %>%
nest(Wavelength, ChA, ChB, Reflectance, .key = Spectra)
absurd_raw_files <- absurd_raw_data$spu_filename
absurd_raw_data %>% group_by(Date, Site) %>%
summarize(Treatments = str_c(unique(Treatment), collapse = ","), Files = n())
## Corrected Spectra
absurd_data <- df_corrected %>%
filter(!str_detect(Treatment, "REF")) %>% # ignore REF files
# filter(!spu_filename %in% unprocessed_spu_files) %>% # leave out missing multispec data
unnest(processed_spectra) %>% # use corrected spectra
select(-(ChB:raw_reflectance)) %>%  # remove unnecessary Wavelength specific rows
filter(Wavelength > 400 & Wavelength < 1000) %>%
filter(corrected_reflectance > 1) %>%
nest(Wavelength, corrected_reflectance, .key = corrected_spectra)
## Summary
absurd_data %>% group_by(Date, Site) %>%
summarize(Treatments = str_c(str_replace_na(unique(Treatment)), collapse = ","), Files = n())  %>%
kable()
## File List
absurd_files <- absurd_data$spu_filename
## Plot Check
absurd_data %>%
inner_join(spu_data) %>%
slice(1:10) %>%
plot_channels()
## Plot Check
absurd_data %>%
inner_join(spu_dataframe) %>%
slice(1:10) %>%
plot_channels()
absurd_data
df_ref_filenames <- df_corrected %>% unnest(processed_spectra) %>%
select(spu_filename, ref_filenames) %>% distinct()
unispec_problem_key_pre <- unispec_file_key %>%
mutate(Replicate = factor(Replicate)) %>%
# mislabeled
mutate(mislabeled = !is.na(key_fix)) %>% # mislabeled
# mismeasurement
left_join(maxed_data) %>% # maxed_number, maxed_wavelenghs
mutate(maxed = maxed_number > 5) %>% # choose how strict to make this using maxed_number threshold, etc. # mutate(maxed = spu_filename %in% maxed_data_files_bad) %>%
mutate(dim = spu_filename %in% dim_files) %>% # dim
mutate(absurd_reflectance = spu_filename %in% c(zero_files, absurd_files)) %>% # absurd_reflectance
# missing
mutate(missing_spu = spu_filename %in% missing_spu_files) %>%  # missing_spu
left_join(df_ref_filenames)
# miscorrection
ref_problem_key <- unispec_problem_key_pre %>%
filter(spu_filename %in% ref_files) %>% # select ref files
#mutate(mislabeled = if_else(spu_filename %in% ref_mistakes, TRUE, mislabeled)) %>%
gather("problem", "status", mislabeled, maxed, dim, absurd_reflectance, missing_spu) %>% # row for each type of problem
filter(!is.na(status)) %>% # remove non-problems
filter(status != FALSE) %>% # remove non-problems
group_by(spu_filename) %>%
select(spu_filename, problem, status) %>%
summarize(problems = str_c(unique(problem), collapse = ", ")) %>% # group: one row per spu_filename
rename(ref_filenames = spu_filename, ref_problem = problems) # rename variables to join w/unispec_problem_key
## Unispec Problem Key
unispec_problem_key <- unispec_problem_key_pre %>%
separate_rows(ref_filenames, sep = ", ") %>% # split ref_filenames string into multiple rows per ref_filename
left_join(ref_problem_key) %>% # adds ref_problem column
group_by(spu_filename) %>%
summarize(ref_problems = str_c(ref_problem, collapse = "; ")) %>% # collapse to one row per spu_filename
right_join(unispec_problem_key_pre) %>%  # add the rest of the key info back in
mutate_at(.vars = c("ref_problems", "dim", "absurd_reflectance", "mislabeled", "missing_spu"), .funs = factor) %>%
mutate(file_problem = any(maxed, dim, absurd_reflectance)) %>%
select(spu_filename, Type, Date, Site, Block, Treatment, Replicate, Weather, Notes, missing_spu, file_problem, mislabeled, key_fix, maxed, maxed_number, maxed_wavelengths, dim, absurd_reflectance, ref_problems, ref_filenames) # order
### Summary table
unispec_problem_key %>%
mutate_at(funs(factor), .vars = vars(c("Site", "Block", "Treatment", "key_fix", "ref_problems"))) %>%
summary()
df_ref_filenames <- df_corrected %>% unnest(processed_spectra) %>%
select(spu_filename, ref_filenames) %>% distinct()
unispec_problem_key_pre <- unispec_file_key %>%
mutate(Replicate = factor(Replicate)) %>%
# mislabeled
mutate(mislabeled = !is.na(key_fix)) %>% # mislabeled
# mismeasurement
left_join(maxed_data) %>% # maxed_number, maxed_wavelenghs
mutate(maxed = maxed_number > 5) %>% # choose how strict to make this using maxed_number threshold, etc. # mutate(maxed = spu_filename %in% maxed_data_files_bad) %>%
mutate(dim = spu_filename %in% dim_files) %>% # dim
mutate(absurd_reflectance = spu_filename %in% c(zero_files, absurd_files)) %>% # absurd_reflectance
# missing
mutate(missing_spu = spu_filename %in% missing_spu_files) %>%  # missing_spu
left_join(df_ref_filenames)
unispec_problem_key_pre <- unispec_file_key_fix%>%
mutate(Replicate = factor(Replicate)) %>%
# mislabeled
mutate(mislabeled = !is.na(key_fix)) %>% # mislabeled
# mismeasurement
left_join(maxed_data) %>% # maxed_number, maxed_wavelenghs
mutate(maxed = maxed_number > 5) %>% # choose how strict to make this using maxed_number threshold, etc. # mutate(maxed = spu_filename %in% maxed_data_files_bad) %>%
mutate(dim = spu_filename %in% dim_files) %>% # dim
mutate(absurd_reflectance = spu_filename %in% c(zero_files, absurd_files)) %>% # absurd_reflectance
# missing
mutate(missing_spu = spu_filename %in% missing_spu_files) %>%  # missing_spu
left_join(df_ref_filenames)
# miscorrection
ref_problem_key <- unispec_problem_key_pre %>%
filter(spu_filename %in% ref_files) %>% # select ref files
#mutate(mislabeled = if_else(spu_filename %in% ref_mistakes, TRUE, mislabeled)) %>%
gather("problem", "status", mislabeled, maxed, dim, absurd_reflectance, missing_spu) %>% # row for each type of problem
filter(!is.na(status)) %>% # remove non-problems
filter(status != FALSE) %>% # remove non-problems
group_by(spu_filename) %>%
select(spu_filename, problem, status) %>%
summarize(problems = str_c(unique(problem), collapse = ", ")) %>% # group: one row per spu_filename
rename(ref_filenames = spu_filename, ref_problem = problems) # rename variables to join w/unispec_problem_key
## Build Plot all reference data files
ref_data_all <- ref_data %>% unnest(Spectra) %>%
filter(Wavelength > 400, Wavelength < 1000) %>%
mutate(CorrectionFactor = 1/Reflectance)
ref_plot_all <- ggplot(ref_data_all, aes(x = Wavelength, y = CorrectionFactor, group=spu_filename)) +
geom_line(aes(color=Integration_ms)) + theme(legend.position="left")
## Build Plot all reference mistakes
ref_data_mistakes <- ref_data_all %>%
filter(CorrectionFactor > 5) %>%
distinct(spu_filename) %>%
select(spu_filename) %>%
left_join(ref_data_all)
ref_plot_mistakes <- ggplot(ref_data_mistakes, aes(x = Wavelength, y = CorrectionFactor)) +
geom_line(aes(color=spu_filename))
## PLOTS
ref_plot_all + ggtitle("ALL REFERENCES")
ref_plot_mistakes + ggtitle("REF Mistakes") +
scale_y_continuous(limits = c(0, NA))
## File Lists
ref_files <- ref_data$spu_filename %>% unique()
ref_mistakes <- ref_data_mistakes %>% distinct(spu_filename) %>% pull()
df_ref_filenames <- df_corrected %>% unnest(processed_spectra) %>%
select(spu_filename, ref_filenames) %>% distinct()
unispec_problem_key_pre <- unispec_file_key_fix%>%
mutate(Replicate = factor(Replicate)) %>%
# mislabeled
mutate(mislabeled = !is.na(key_fix)) %>% # mislabeled
# mismeasurement
left_join(maxed_data) %>% # maxed_number, maxed_wavelenghs
mutate(maxed = maxed_number > 5) %>% # choose how strict to make this using maxed_number threshold, etc. # mutate(maxed = spu_filename %in% maxed_data_files_bad) %>%
mutate(dim = spu_filename %in% dim_files) %>% # dim
mutate(absurd_reflectance = spu_filename %in% c(zero_files, absurd_files)) %>% # absurd_reflectance
# missing
mutate(missing_spu = spu_filename %in% missing_spu_files) %>%  # missing_spu
left_join(df_ref_filenames)
# miscorrection
ref_problem_key <- unispec_problem_key_pre %>%
filter(spu_filename %in% ref_files) %>% # select ref files
#mutate(mislabeled = if_else(spu_filename %in% ref_mistakes, TRUE, mislabeled)) %>%
gather("problem", "status", mislabeled, maxed, dim, absurd_reflectance, missing_spu) %>% # row for each type of problem
filter(!is.na(status)) %>% # remove non-problems
filter(status != FALSE) %>% # remove non-problems
group_by(spu_filename) %>%
select(spu_filename, problem, status) %>%
summarize(problems = str_c(unique(problem), collapse = ", ")) %>% # group: one row per spu_filename
rename(ref_filenames = spu_filename, ref_problem = problems) # rename variables to join w/unispec_problem_key
## Unispec Problem Key
unispec_problem_key <- unispec_problem_key_pre %>%
separate_rows(ref_filenames, sep = ", ") %>% # split ref_filenames string into multiple rows per ref_filename
left_join(ref_problem_key) %>% # adds ref_problem column
group_by(spu_filename) %>%
summarize(ref_problems = str_c(ref_problem, collapse = "; ")) %>% # collapse to one row per spu_filename
right_join(unispec_problem_key_pre) %>%  # add the rest of the key info back in
mutate_at(.vars = c("ref_problems", "dim", "absurd_reflectance", "mislabeled", "missing_spu"), .funs = factor) %>%
mutate(file_problem = any(maxed, dim, absurd_reflectance)) %>%
select(spu_filename, Type, Date, Site, Block, Treatment, Replicate, Weather, Notes, missing_spu, file_problem, mislabeled, key_fix, maxed, maxed_number, maxed_wavelengths, dim, absurd_reflectance, ref_problems, ref_filenames) # order
### Summary table
unispec_problem_key %>%
mutate_at(funs(factor), .vars = vars(c("Site", "Block", "Treatment", "key_fix", "ref_problems"))) %>%
summary()
### Summary table
unispec_problem_key %>%
mutate_at(list(factor), .vars = vars(c("Site", "Block", "Treatment", "key_fix", "ref_problems"))) %>%
summary()
## Unispec Problem Key
unispec_problem_key <- unispec_problem_key_pre %>%
separate_rows(ref_filenames, sep = ", ") %>% # split ref_filenames string into multiple rows per ref_filename
left_join(ref_problem_key) %>% # adds ref_problem column
group_by(spu_filename) %>%
summarize(ref_problems = str_c(ref_problem, collapse = "; ")) %>% # collapse to one row per spu_filename
right_join(unispec_problem_key_pre) %>%  # add the rest of the key info back in
mutate_at(.vars = c("ref_problems", "dim", "absurd_reflectance", "mislabeled", "missing_spu"), .funs = factor) %>%
mutate(file_problem = any(maxed, dim, absurd_reflectance)) %>%
select(spu_filename, Type, Date, Site, Block, Treatment, Replicate, Weather, Notes, missing_spu, file_problem, mislabeled, key_fix, maxed, maxed_number, maxed_wavelengths, dim, absurd_reflectance, ref_problems, ref_filenames) # order
unispec_problem_key
## Unispec Problem Key
unispec_problem_key <- unispec_problem_key_pre %>%
separate_rows(ref_filenames, sep = ", ") %>% # split ref_filenames string into multiple rows per ref_filename
left_join(ref_problem_key) %>% # adds ref_problem column
group_by(spu_filename) %>%
summarize(ref_problems = str_c(ref_problem, collapse = "; ")) %>% # collapse to one row per spu_filename
right_join(unispec_problem_key_pre) %>%  # add the rest of the key info back in
mutate_at(.vars = c("ref_problems", "dim", "absurd_reflectance", "mislabeled", "missing_spu"), .funs = factor) %>%
mutate(file_problem = any(maxed, dim, absurd_reflectance, na.rm = T)) %>%
select(spu_filename, Type, Date, Site, Block, Treatment, Replicate, Weather, Notes, missing_spu, file_problem, mislabeled, key_fix, maxed, maxed_number, maxed_wavelengths, dim, absurd_reflectance, ref_problems, ref_filenames) # order
### Summary table
unispec_problem_key %>%
mutate_at(list(factor), .vars = vars(c("Site", "Block", "Treatment", "key_fix", "ref_problems"))) %>%
summary()
unispec_file_key_fix
unispec_problem_key
unispec_problem_key_pre
unispec_problem_key
### Summary table
unispec_problem_key %>%
mutate_at(list(factor), .vars = vars(c("Site", "Block", "Treatment", "key_fix", "ref_problems"))) %>%
summary()
## Unispec Problem Key
unispec_problem_key <- unispec_problem_key_pre %>%
separate_rows(ref_filenames, sep = ", ") %>% # split ref_filenames string into multiple rows per ref_filename
left_join(ref_problem_key) %>% # adds ref_problem column
group_by(spu_filename) %>%
summarize(ref_problems = str_c(ref_problem, collapse = "; ")) %>% # collapse to one row per spu_filename
right_join(unispec_problem_key_pre) %>%  # add the rest of the key info back in
mutate_at(.vars = c("ref_problems", "dim", "absurd_reflectance", "mislabeled", "missing_spu"), .funs = factor) %>%
mutate(file_problem = any(maxed, dim, absurd_reflectance, na.rm = T)) %>%
select(spu_filename, Type, Date, Site, Block, Treatment, Replicate, Weather, Notes, missing_spu, file_problem, mislabeled, key_fix, maxed, maxed_number, maxed_wavelengths, dim, absurd_reflectance, ref_problems, ref_filenames) # order
unispec_problem_key
## Unispec Problem Key
unispec_problem_key <- unispec_problem_key_pre %>%
separate_rows(ref_filenames, sep = ", ") %>% # split ref_filenames string into multiple rows per ref_filename
left_join(ref_problem_key) %>% # adds ref_problem column
group_by(spu_filename) %>%
summarize(ref_problems = str_c(ref_problem, collapse = "; ")) %>% # collapse to one row per spu_filename
right_join(unispec_problem_key_pre) %>%  # add the rest of the key info back in
mutate_at(.vars = c("ref_problems", "dim", "absurd_reflectance", "mislabeled", "missing_spu"), .funs = factor) %>%
mutate(file_problem = any(maxed, dim, absurd_reflectance, na.rm = T)) %>%
select(spu_filename, Type, Date, Site, Block, Treatment, Replicate, Weather, Notes, missing_spu, file_problem, mislabeled, key_fix, maxed, maxed_number, maxed_wavelengths, dim, absurd_reflectance, ref_problems, ref_filenames) # order
unispec_problem_key
?any
?which
ref_problem_key
unispec_problem_key %>% filter(!is.na(ref_problems))
s
unispec_problem_key
unispec_problem_key %>% distinct(ref_problems)
unispec_problem_key_pre %>%
separate_rows(ref_filenames, sep = ", ") %>% # split ref_filenames string into multiple rows per ref_filename
left_join(ref_problem_key)
unispec_problem_key_pre %>%
separate_rows(ref_filenames, sep = ", ") %>% # split ref_filenames string into multiple rows per ref_filename
left_join(ref_problem_key) %>% distinct(ref_problem)
## Unispec Problem Key
unispec_problem_key <- unispec_problem_key_pre %>%
separate_rows(ref_filenames, sep = ", ") %>% # split ref_filenames string into multiple rows per ref_filename
left_join(ref_problem_key) %>% # adds ref_problem column
group_by(spu_filename) %>%
summarize(ref_problems = str_c(str_replace_na(ref_problem), collapse = "; ")) %>% # collapse to one row per spu_filename
right_join(unispec_problem_key_pre) %>%  # add the rest of the key info back in
mutate_at(.vars = c("ref_problems", "dim", "absurd_reflectance", "mislabeled", "missing_spu"), .funs = factor) %>%
mutate(file_problem = any(maxed, dim, absurd_reflectance, na.rm = T)) %>%
select(spu_filename, Type, Date, Site, Block, Treatment, Replicate, Weather, Notes, missing_spu, file_problem, mislabeled, key_fix, maxed, maxed_number, maxed_wavelengths, dim, absurd_reflectance, ref_problems, ref_filenames) # order
### Summary table
unispec_problem_key %>%
mutate_at(list(factor), .vars = vars(c("Site", "Block", "Treatment", "key_fix", "ref_problems"))) %>%
summary()
## Unispec Problem Key
unispec_problem_key <- unispec_problem_key_pre %>%
separate_rows(ref_filenames, sep = ", ") %>% # split ref_filenames string into multiple rows per ref_filename
left_join(ref_problem_key) %>% # adds ref_problem column
group_by(spu_filename) %>%
summarize(ref_problems = str_c(str_replace_na(ref_problem), collapse = "; ")) %>% # collapse to one row per spu_filename
right_join(unispec_problem_key_pre) %>%  # add the rest of the key info back in
mutate_at(.vars = c("ref_problems", "dim", "absurd_reflectance", "mislabeled", "missing_spu"), .funs = factor) %>%
mutate(file_problem = any(maxed, dim, absurd_reflectance, na.rm = T)) %>%
select(spu_filename, Type, Date, Site, Block, Treatment, Replicate, Weather, Notes, missing_spu, file_problem, mislabeled, key_fix, maxed, maxed_number, maxed_wavelengths, dim, absurd_reflectance, ref_problems, ref_filenames) # order
### Summary table
unispec_problem_key %>%
mutate_at(list(factor), .vars = vars(c("Site", "Block", "Treatment", "key_fix", "ref_problems"))) %>%
summary()
## Unispec Problem Key
unispec_problem_key <- unispec_problem_key_pre %>%
separate_rows(ref_filenames, sep = ", ") %>% # split ref_filenames string into multiple rows per ref_filename
left_join(ref_problem_key) %>% # adds ref_problem column
group_by(spu_filename) %>%
summarize(ref_problems = str_c(str_replace_na(ref_problem), collapse = "; ")) %>% # collapse to one row per spu_filename
right_join(unispec_problem_key_pre) %>%  # add the rest of the key info back in
mutate_at(.vars = c("ref_problems", "dim", "absurd_reflectance", "mislabeled", "missing_spu"), .funs = factor) %>%
mutate_at(.vars = c("dim", "absurd_reflectance", "mislabeled", "missing_spu"), .funs = as.logical.factor()) %>%
mutate(file_problem = any(maxed, dim, absurd_reflectance, na.rm = T)) %>%
select(spu_filename, Type, Date, Site, Block, Treatment, Replicate, Weather, Notes, missing_spu, file_problem, mislabeled, key_fix, maxed, maxed_number, maxed_wavelengths, dim, absurd_reflectance, ref_problems, ref_filenames) # order
## Unispec Problem Key
unispec_problem_key <- unispec_problem_key_pre %>%
separate_rows(ref_filenames, sep = ", ") %>% # split ref_filenames string into multiple rows per ref_filename
left_join(ref_problem_key) %>% # adds ref_problem column
group_by(spu_filename) %>%
summarize(ref_problems = str_c(str_replace_na(ref_problem), collapse = "; ")) %>% # collapse to one row per spu_filename
right_join(unispec_problem_key_pre) %>%  # add the rest of the key info back in
mutate_at(.vars = c("ref_problems", "dim", "absurd_reflectance", "mislabeled", "missing_spu"), .funs = factor) %>%
mutate_at(.vars = c("dim", "absurd_reflectance", "mislabeled", "missing_spu"), .funs = as.logical) %>%
mutate(file_problem = any(maxed, dim, absurd_reflectance, na.rm = T)) %>%
select(spu_filename, Type, Date, Site, Block, Treatment, Replicate, Weather, Notes, missing_spu, file_problem, mislabeled, key_fix, maxed, maxed_number, maxed_wavelengths, dim, absurd_reflectance, ref_problems, ref_filenames) # order
### Summary table
unispec_problem_key %>%
mutate_at(list(factor), .vars = vars(c("Site", "Block", "Treatment", "key_fix", "ref_problems"))) %>%
summary()
## Unispec Problem Key
unispec_problem_key <- unispec_problem_key_pre %>%
separate_rows(ref_filenames, sep = ", ") %>% # split ref_filenames string into multiple rows per ref_filename
left_join(ref_problem_key) %>% # adds ref_problem column
group_by(spu_filename) %>%
summarize(ref_problems = str_c(str_replace_na(ref_problem), collapse = "; ")) %>% # collapse to one row per spu_filename
right_join(unispec_problem_key_pre) %>%  # add the rest of the key info back in
mutate_at(.vars = c("ref_problems", "dim", "absurd_reflectance", "mislabeled", "missing_spu"), .funs = factor) %>%
mutate(file_problem = any(maxed, dim, absurd_reflectance, na.rm = T)) %>%
select(spu_filename, Type, Date, Site, Block, Treatment, Replicate, Weather, Notes, missing_spu, file_problem, mislabeled, key_fix, maxed, maxed_number, maxed_wavelengths, dim, absurd_reflectance, ref_problems, ref_filenames) # order
unispec_problem_key_pre <- unispec_file_key_fix%>%
mutate(Replicate = factor(Replicate)) %>%
# mislabeled
mutate(mislabeled = !is.na(key_fix)) %>% # mislabeled
# mismeasurement
left_join(maxed_data) %>% # maxed_number, maxed_wavelenghs
mutate(maxed = maxed_number > 5) %>% # choose how strict to make this using maxed_number threshold, etc. # mutate(maxed = spu_filename %in% maxed_data_files_bad) %>%
mutate(dim = spu_filename %in% dim_files) %>% # dim
mutate(absurd_reflectance = spu_filename %in% c(zero_files, absurd_files)) %>% # absurd_reflectance
# missing
mutate(missing_spu = spu_filename %in% missing_spu_files) %>%  # missing_spu
left_join(df_ref_filenames)
# miscorrection
ref_problem_key <- unispec_problem_key_pre %>%
filter(spu_filename %in% ref_files) %>% # select ref files
#mutate(mislabeled = if_else(spu_filename %in% ref_mistakes, TRUE, mislabeled)) %>%
gather("problem", "status", mislabeled, maxed, dim, absurd_reflectance, missing_spu) %>% # row for each type of problem
filter(!is.na(status)) %>% # remove non-problems
filter(status != FALSE) %>% # remove non-problems
group_by(spu_filename) %>%
select(spu_filename, problem, status) %>%
summarize(problems = str_c(unique(problem), collapse = ", ")) %>% # group: one row per spu_filename
rename(ref_filenames = spu_filename, ref_problem = problems) # rename variables to join w/unispec_problem_key
## Unispec Problem Key
unispec_problem_key <- unispec_problem_key_pre %>%
separate_rows(ref_filenames, sep = ", ") %>% # split ref_filenames string into multiple rows per ref_filename
left_join(ref_problem_key) %>% # adds ref_problem column
group_by(spu_filename) %>%
summarize(ref_problems = str_c(str_replace_na(ref_problem), collapse = "; ")) %>% # collapse to one row per spu_filename
right_join(unispec_problem_key_pre) %>%  # add the rest of the key info back in
mutate_at(.vars = c("ref_problems", "dim", "absurd_reflectance", "mislabeled", "missing_spu"), .funs = factor) %>%
mutate(file_problem = any(maxed, dim, absurd_reflectance, na.rm = T)) %>%
select(spu_filename, Type, Date, Site, Block, Treatment, Replicate, Weather, Notes, missing_spu, file_problem, mislabeled, key_fix, maxed, maxed_number, maxed_wavelengths, dim, absurd_reflectance, ref_problems, ref_filenames) # order
### Summary table
unispec_problem_key %>%
mutate_at(list(factor), .vars = vars(c("Site", "Block", "Treatment", "key_fix", "ref_problems"))) %>%
summary()
maxed_data
unispec_problem_key_pre <- unispec_file_key_fix%>%
mutate(Replicate = factor(Replicate)) %>%
# mislabeled
mutate(mislabeled = !is.na(key_fix)) %>% # mislabeled
# mismeasurement
left_join(maxed_data) %>% # maxed_number, maxed_wavelenghs
mutate(maxed = maxed_number > 5) %>% # choose how strict to make this using maxed_number threshold, etc. # mutate(maxed = spu_filename %in% maxed_data_files_bad) %>%
mutate(dim = spu_filename %in% dim_files) %>% # dim
mutate(absurd_reflectance = spu_filename %in% c(zero_files, absurd_files)) %>% # absurd_reflectance
# missing
mutate(missing_spu = spu_filename %in% missing_spu_files) %>%  # missing_spu
left_join(df_ref_filenames)
unispec_problem_key_pre
unispec_problem_key_pre <- unispec_file_key_fix%>%
mutate(Replicate = factor(Replicate)) %>%
# mislabeled
mutate(mislabeled = !is.na(key_fix)) %>% # mislabeled
# mismeasurement
left_join(maxed_data) %>% # maxed_number, maxed_wavelenghs
mutate(maxed = spu_filename %in% maxed_data_files_bad) %>%
mutate(dim = spu_filename %in% dim_files) %>% # dim
mutate(absurd_reflectance = spu_filename %in% c(zero_files, absurd_files)) %>% # absurd_reflectance
# missing
mutate(missing_spu = spu_filename %in% missing_spu_files) %>%  # missing_spu
left_join(df_ref_filenames)
unispec_problem_key_pre <- unispec_file_key_fix%>%
mutate(Replicate = factor(Replicate)) %>%
# mislabeled
mutate(mislabeled = !is.na(key_fix)) %>% # mislabeled
# mismeasurement
left_join(maxed_data) %>% # maxed_number, maxed_wavelenghs
mutate(maxed = spu_filename %in% maxed_files) %>%
mutate(dim = spu_filename %in% dim_files) %>% # dim
mutate(absurd_reflectance = spu_filename %in% c(zero_files, absurd_files)) %>% # absurd_reflectance
# missing
mutate(missing_spu = spu_filename %in% missing_spu_files) %>%  # missing_spu
left_join(df_ref_filenames)
# miscorrection
ref_problem_key <- unispec_problem_key_pre %>%
filter(spu_filename %in% ref_files) %>% # select ref files
#mutate(mislabeled = if_else(spu_filename %in% ref_mistakes, TRUE, mislabeled)) %>%
gather("problem", "status", mislabeled, maxed, dim, absurd_reflectance, missing_spu) %>% # row for each type of problem
filter(!is.na(status)) %>% # remove non-problems
filter(status != FALSE) %>% # remove non-problems
group_by(spu_filename) %>%
select(spu_filename, problem, status) %>%
summarize(problems = str_c(unique(problem), collapse = ", ")) %>% # group: one row per spu_filename
rename(ref_filenames = spu_filename, ref_problem = problems) # rename variables to join w/unispec_problem_key
## Unispec Problem Key
unispec_problem_key <- unispec_problem_key_pre %>%
separate_rows(ref_filenames, sep = ", ") %>% # split ref_filenames string into multiple rows per ref_filename
left_join(ref_problem_key) %>% # adds ref_problem column
group_by(spu_filename) %>%
summarize(ref_problems = str_c(str_replace_na(ref_problem), collapse = "; ")) %>% # collapse to one row per spu_filename
right_join(unispec_problem_key_pre) %>%  # add the rest of the key info back in
mutate_at(.vars = c("ref_problems", "dim", "absurd_reflectance", "mislabeled", "missing_spu"), .funs = factor) %>%
mutate(file_problem = any(maxed, dim, absurd_reflectance, na.rm = T)) %>%
select(spu_filename, Type, Date, Site, Block, Treatment, Replicate, Weather, Notes, missing_spu, file_problem, mislabeled, key_fix, maxed, maxed_number, maxed_wavelengths, dim, absurd_reflectance, ref_problems, ref_filenames) # order
### Summary table
unispec_problem_key %>%
mutate_at(list(factor), .vars = vars(c("Site", "Block", "Treatment", "key_fix", "ref_problems"))) %>%
summary()
## Unispec Problem Key
unispec_problem_key <- unispec_problem_key_pre %>%
separate_rows(ref_filenames, sep = ", ") %>% # split ref_filenames string into multiple rows per ref_filename
left_join(ref_problem_key) %>% # adds ref_problem column
group_by(spu_filename) %>%
summarize(ref_problems = str_c(str_replace_na(ref_problem), collapse = "; ")) %>% # collapse to one row per spu_filename
right_join(unispec_problem_key_pre) %>%  # add the rest of the key info back in
mutate_at(.vars = c("ref_problems", "dim", "absurd_reflectance", "mislabeled", "missing_spu"), .funs = factor) %>%
select(spu_filename, Type, Date, Site, Block, Treatment, Replicate, Weather, Notes, missing_spu, file_problem, mislabeled, key_fix, maxed, maxed_number, maxed_wavelengths, dim, absurd_reflectance, ref_problems, ref_filenames) # order
### Summary table
unispec_problem_key %>%
mutate_at(list(factor), .vars = vars(c("Site", "Block", "Treatment", "key_fix", "ref_problems"))) %>%
summary()
unispec_problem_key %>%   mutate(file_problem = any(maxed, dim, absurd_reflectance, na.rm = T))
?any
unispec_problem_key %>%  filter(any(maxed, dim))
unispec_problem_key %>%  filter(any(maxed, dim, na.rm = T))
unispec_problem_key %>%  filter(!is.na(maxed)
)
unispec_problem_key %>%  filter(is.na(maxed)
)
unispec_problem_key(maxed)
unispec_problem_key %>% filter(maxed)
unispec_problem_key %>% filter(any(maxed, dim))
unispec_problem_key %>% filter(any(maxed, dim, na.rm = F))
unispec_problem_key %>% filter(dim)
unispec_problem_key %>% filter(as.logical(dim)
)
unispec_problem_key %>% filter(as.logical(dim), maxed))
unispec_problem_key %>% filter(any(as.logical(dim), maxed))
unispec_problem_key %>% filter(as.logical(dim))
unispec_problem_key %>% filter(as.logical(dim), maxed, na.rm=T)
unispec_problem_key %>% filter(any(as.logical(dim), maxed, na.rm=T))
### Summary table
unispec_problem_key %>%
mutate_at(list(factor), .vars = vars(c("Site", "Block", "Treatment", "key_fix", "ref_problems")))
maxed_files
dim_files
absurd_files
problem_files <- c(maxed_files, dim_files, absurd_files, missing_files)
missing_spu_files <- missing_spu_data$spu_filename
missing_spu_files
problem_files <- c(maxed_files, dim_files, absurd_files, missing_spu_files)
### Summary table
unispec_problem_key %>%
mutate_at(list(factor), .vars = vars(c("Site", "Block", "Treatment", "key_fix", "ref_problems"))) %>%
mutate(file_problem = spu_filename %in% problem_files) %>%
summary()
