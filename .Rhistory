select(spu_filename, DateTime, ref_filenames, processed_spectra) %>% unnest(processed_spectra) %>%
select(
spu_filename,
DateTime,
ref_filenames,
Wavelength,
ChB,
ChA,
raw_reflectance,
CorrectionFactor,
corrected_reflectance
) %>%
nest(
Spectra = c(
Wavelength,
ChB,
ChA,
raw_reflectance,
CorrectionFactor,
corrected_reflectance
)
)
processed_spu_data
ref_spu_data <- ref_data %>% unnest(Spectra) %>%
select(spu_filename, DateTime, Wavelength, ChB, ChA, Reflectance) %>%
mutate(CorrectionFactor = 1/Reflectance, corrected_reflectance = NA) %>%
filter(Wavelength > 400, Wavelength < 1000) %>%
rename(raw_reflectance = Reflectance) %>%
nest(Spectra = c(Wavelength, ChB, ChA, raw_reflectance, CorrectionFactor, corrected_reflectance))
df_processed <- bind_rows(processed_spu_data, ref_spu_data)
df_processed
df_processed$Spectra[1]
## Processed Data
processed_filename <- paste0(data_path, dir_year, "_processed_spu_data.rds")
processed_spectra <- read_rds(processed_filename)
processed_spectra
processed_spectra %>% tail()
df_processed %>% left_join(unispec_file_key) %>%
unnest(Spectra) %>% filter(is.na(corrected_reflectance)) %>%
select(Date, Site, Treatment, spu_filename) %>% unique()
df_processed %>% left_join(unispec_file_key) %>%
unnest(Spectra) %>% filter(is.na(corrected_reflectance)) %>%
select(Date, Site, Treatment, spu_filename) %>% unique()
df_processed %>% left_join(unispec_file_key) %>%
unnest(Spectra) %>% filter(is.na(corrected_reflectance)) %>%
select(Date, Site, Treatment, spu_filename) %>% unique() %>%
print(n=100)
all_spectra <- processed_spectra %>% row_bind(df_processed) %>% arrange(DateTime)
all_spectra <- processed_spectra %>% bind_rows(df_processed) %>% arrange(DateTime)
all_spectra
left_join(all_spectra, spu_key) %>%   group_by(Site, Date) %>%
summarize(Files = n_distinct(spu_filename)) %>%
kable()
left_join(all_spectra, spu_key) %>%   group_by(Date, Site) %>%
summarize(Files = n_distinct(spu_filename)) %>%
kable()
anti_join(all_spectra, processed_spect)
anti_join(all_spectra, processed_spectra)
anti_join(all_spectra %>% select(spu_filename), processed_spectra)
anti_join(all_spectra %>% select(spu_filename), processed_spectra) %>% left_join(unispec_file_key) %>% group_by(Date, Site) %>% summarize()
# Check no others are missing
anti_join(processed_spectra %>% select(spu_filename), all_spectra) %>% left_join(unispec_file_key) %>% group_by(Date, Site) %>% summarize()
## Save
processed_spu_filename <- paste0(data_path, dir_year, "_processed_spu_data.rds")
processed_spu_filename
write_rds(all_spectra, processed_spu_filename)
## Processed Data
processed_filename <- paste0(data_path, dir_year, "_processed_spu_data.rds")
processed_spectra <- read_rds(processed_filename)
## Processed Data summary
left_join(processed_spectra, spu_key) %>%   group_by(Site, Date) %>%
summarize(Files = n_distinct(spu_filename)) %>%
kable()
## Raw Data summary
spu_dataframe %>%   group_by(Date, Site) %>%
summarize(Files = n_distinct(spu_filename)) %>%
kable()
## Processed Data summary
left_join(processed_spectra, spu_key) %>%   group_by(Date, Site) %>%
summarize(Files = n_distinct(spu_filename)) %>%
kable()
## Raw Data
raw_filename <- paste0(data_path, dir_year, "_raw_spu_data.rds")
spu_spectra <- read_rds(raw_filename)
raw_keyname <- paste0(data_path, dir_year, "_raw_spu_key.csv")
spu_key <- read_csv(raw_keyname) # remove -spu_filename_full column for 2019
## Raw Data summary
spu_dataframe %>%   group_by(Date, Site) %>%
summarize(Files = n_distinct(spu_filename)) %>%
kable()
## DATA SUMMARIES
spu_dataframe <- full_join(spu_spectra, spu_key) %>%
# mutate(DateTime = lubridate::ymd_hms(DateTime, tz = "US/Alaska")) %>%
mutate(Date = str_extract(spu_filename, pattern = "^[0-9]{4}-[0-9]{2}-[0-9]{2}")) %>%  # from filename, not DateTime (sometimes discrepancy in unispec instrument time). Keep as character, to avoid joining errors w/other dataframes
arrange(DateTime)
function (object, ...)
## Raw Data summary
spu_dataframe %>%   group_by(Date, Site) %>%
summarize(Files = n_distinct(spu_filename)) %>%
kable()
## Processed Data summary
left_join(processed_spectra, spu_key) %>%   group_by(Date, Site) %>%
summarize(Files = n_distinct(spu_filename)) %>%
kable()
## Raw Data summary
spu_dataframe %>%   group_by(Date, Site) %>%
summarize(Files = n_distinct(spu_filename)) %>%
kable()
## Processed Data summary
left_join(processed_spectra, spu_key) %>%   group_by(Date, Site) %>%
summarize(Files = n_distinct(spu_filename)) %>%
kable()
## Raw Data summary
spu_dataframe %>%   group_by(Date, Site) %>%
summarize(Files = n_distinct(spu_filename)) %>%
kable()
## Processed Data summary
left_join(processed_spectra, spu_key) %>%   group_by(Date, Site) %>%
summarize(Files = n_distinct(spu_filename)) %>%
kable()
processed_spectra
processed_spectra$Spectra[1]
# Check all NA's are REF files
processed_spectra %>% left_join(unispec_file_key) %>%
unnest(Spectra) %>% filter(is.na(corrected_reflectance)) %>%
select(Date, Site, Treatment, spu_filename) %>% unique() %>%
print(n=100)
# Check all NA's are REF files
processed_spectra %>% left_join(unispec_file_key) %>%
unnest(Spectra) %>% filter(is.na(corrected_reflectance)) %>%
select(Date, Site, Treatment, spu_filename) %>% unique()
processed_spectra
unispec_file_key
processed_spectra
## File Key
file_key <- paste0(data_path, "2019_unispec_file_key.csv")
unispec_file_key <- read_csv(file_key, skip_empty_rows = T) %>%  ## remove NA rows
mutate(Date = as.character(Date)) # to join with spu_dataframe, same type
## Processed Data
processed_filename <- paste0(data_path, dir_year, "_processed_spu_data.rds")
processed_spectra <- read_rds(processed_filename)
## Index Data
index_filename <- paste0(data_path, dir_year, "_index_data.csv")
index_data <- read_csv(index_filename)
## DATA SUMMARIES
spu_dataframe <- full_join(spu_spectra, spu_key) %>%
# mutate(DateTime = lubridate::ymd_hms(DateTime, tz = "US/Alaska")) %>%
mutate(Date = str_extract(spu_filename, pattern = "^[0-9]{4}-[0-9]{2}-[0-9]{2}")) %>%  # from filename, not DateTime (sometimes discrepancy in unispec instrument time). Keep as character, to avoid joining errors w/other dataframes
arrange(DateTime)
df_analysis <- index_data %>% nest(Indices = c("Index", "BandDefinition", "Value")) %>%
left_join(processed_spectra) %>%
left_join(unispec_file_key) %>% arrang(DateTime)
# Check all NA's are REF files
processed_spectra %>% left_join(unispec_file_key) %>%
unnest(Spectra) %>% filter(is.na(corrected_reflectance)) %>%
select(Date, Site, Treatment, spu_filename) %>% unique()
# Check all NA's are REF files
processed_spectra %>% left_join(unispec_file_key) %>%
unnest(Spectra) %>% filter(is.na(corrected_reflectance)) %>%
select(Date, Site, Treatment, spu_filename) %>% unique()  %>%
pull(Treatment) %>% factor()
# Check all NA's are REF files
processed_spectra %>% left_join(unispec_file_key) %>%
unnest(Spectra) %>% filter(is.na(corrected_reflectance)) %>%
select(Date, Site, Treatment, spu_filename) %>% unique()  %>%
pull(Treatment) %>% unique()
## Index Data
index_filename <- paste0(data_path, dir_year, "_index_data.csv")
index_data <- read_csv(index_filename)
index_data %>% tail()
df_processed
## OR identify new files by comparison to existing dataframe
df_processed_new <- anti_join(df_processed, index_data %>% select(spu_filename))
df_processed_new
indices_new <-
## Filter for data  files
unispec_file_key_fix %>%
filter(!is.na(Treatment)) %>%
filter(!str_detect(Treatment, "REF|DARK")) %>%
## Join to spectra data
inner_join(df_processed_new) %>%
## Format for "calculate_indices" function
unnest(Spectra) %>%
select(-ChB, -ChA, -raw_reflectance, -CorrectionFactor, -key_fix) %>%
rename(Reflectance = corrected_reflectance) %>%
nest(Spectra = c(Wavelength, Reflectance)) %>%
## Calculate NDVI
mutate(Indices = map(Spectra, function(x) calculate_indices(x, band_defns = band_defns,
instrument = "MODIS",
indices = c("NDVI", "EVI", "EVI2")))) %>%
arrange(DateTime)
indices_new <-
## Filter for data  files
unispec_file_key %>%
filter(!is.na(Treatment)) %>%
filter(!str_detect(Treatment, "REF|DARK")) %>%
## Join to spectra data
inner_join(df_processed_new) %>%
## Format for "calculate_indices" function
unnest(Spectra) %>%
select(-ChB, -ChA, -raw_reflectance, -CorrectionFactor) %>%
rename(Reflectance = corrected_reflectance) %>%
nest(Spectra = c(Wavelength, Reflectance)) %>%
## Calculate NDVI
mutate(Indices = map(Spectra, function(x) calculate_indices(x, band_defns = band_defns,
instrument = "MODIS",
indices = c("NDVI", "EVI", "EVI2")))) %>%
arrange(DateTime)
knitr::opts_chunk$set(echo = TRUE)
## Required Packages
library("tidyverse")
library("knitr")
source("UnispecProtocol/unispec_protocol_functions.R") # file loads required functions
## Data Path
data_path <-  "/Users/toolik/OneDrive - Marine Biological Laboratory/Toolik Terrestrial/UnispecData/2019/"
## for Ruby's chromebook
data_path <- "UnispecRecord/UnispecData/2019/"
data_path <- "/home/ruby/UnispecData/2019/"
dir_year <- "2019"
Site_Names <- list(DHT = "DHT", DH ="DHT", LDHT = "DHT", DHTB = "DHT", HTH = "DHT", DHTPC = "DHT", HST = "HIST", HIS="HIST",
LOF = "LMAT",  LOFB = "LMAT", LNB = "LMAT", LOFRB ="LMAT",
MATB="MAT", MATSL= "MAT", MATBK = "MAT",
MANTB ="MNAT",MNATB ="MNAT", NAMTB = "MNAT",
NMNT = "NANT", NANTB ="NANT", JULNB ="NANT",NMNTB ="NANT",
LSHB= "SHB", SHBB = "SHB", SHRBB = "SHB", SHRB = "SHB",
LWSG = "WSG", WSGB = "WSG", WS ="WSG", WSB = "WSG", WSDB = "WSG") #TEST = "LAB2"
band_defns <- tribble(
~definition, ~color, ~min, ~max,
"ITEX", "red", 560, 600,
"ITEX", "nir", 725, 1000,
"MODIS", "red", 620, 670,
"MODIS", "nir", 841, 876,
"MODIS", "blue", 459,479,
"SKYE", "red", 620, 680,
"SKYE", "nir", 830, 880,
"SKYE", "blue", 455, 480,
"ToolikGIS_Drone_2018", "red", 640, 680,
"ToolikGIS_Drone_2018", "nir", 820, 890,
"ToolikGIS_MicaSense_2019", "blue", 455, 495,
"ToolikGIS_MicaSense_2019", "green", 540, 580,
"ToolikGIS_MicaSense_2019", "red", 658, 678,
"ToolikGIS_MicaSense_2019", "red_edge", 707, 727,
"ToolikGIS_MicaSense_2019", "near_ir", 800, 880,
"ToolikEDC", "red", 560, 680,
"ToolikEDC", "nir", 725, 1000
)
session_date <- "2019-06-02"
indices_new <-
## Filter for data  files
unispec_file_key %>%
filter(!is.na(Treatment)) %>%
filter(!str_detect(Treatment, "REF|DARK")) %>%
## Join to spectra data
inner_join(df_processed_new) %>%
## Format for "calculate_indices" function
unnest(Spectra) %>%
select(-ChB, -ChA, -raw_reflectance, -CorrectionFactor) %>%
rename(Reflectance = corrected_reflectance) %>%
nest(Spectra = c(Wavelength, Reflectance)) %>%
## Calculate NDVI
mutate(Indices = map(Spectra, function(x) calculate_indices(x, band_defns = band_defns,
instrument = "MODIS",
indices = c("NDVI", "EVI", "EVI2")))) %>%
arrange(DateTime)
knitr::opts_chunk$set(echo = TRUE)
## Required Packages
library("tidyverse")
library("knitr")
source("UnispecProtocol/unispec_protocol_functions.R") # file loads required functions
## Data Path
data_path <-  "/Users/toolik/OneDrive - Marine Biological Laboratory/Toolik Terrestrial/UnispecData/2019/"
## for Ruby's chromebook
data_path <- "UnispecRecord/UnispecData/2019/"
data_path <- "/home/ruby/UnispecData/2019/"
dir_year <- "2019"
Site_Names <- list(DHT = "DHT", DH ="DHT", LDHT = "DHT", DHTB = "DHT", HTH = "DHT", DHTPC = "DHT", HST = "HIST", HIS="HIST",
LOF = "LMAT",  LOFB = "LMAT", LNB = "LMAT", LOFRB ="LMAT",
MATB="MAT", MATSL= "MAT", MATBK = "MAT",
MANTB ="MNAT",MNATB ="MNAT", NAMTB = "MNAT",
NMNT = "NANT", NANTB ="NANT", JULNB ="NANT",NMNTB ="NANT",
LSHB= "SHB", SHBB = "SHB", SHRBB = "SHB", SHRB = "SHB",
LWSG = "WSG", WSGB = "WSG", WS ="WSG", WSB = "WSG", WSDB = "WSG") #TEST = "LAB2"
band_defns <- tribble(
~definition, ~color, ~min, ~max,
"ITEX", "red", 560, 600,
"ITEX", "nir", 725, 1000,
"MODIS", "red", 620, 670,
"MODIS", "nir", 841, 876,
"MODIS", "blue", 459,479,
"SKYE", "red", 620, 680,
"SKYE", "nir", 830, 880,
"SKYE", "blue", 455, 480,
"ToolikGIS_Drone_2018", "red", 640, 680,
"ToolikGIS_Drone_2018", "nir", 820, 890,
"ToolikGIS_MicaSense_2019", "blue", 455, 495,
"ToolikGIS_MicaSense_2019", "green", 540, 580,
"ToolikGIS_MicaSense_2019", "red", 658, 678,
"ToolikGIS_MicaSense_2019", "red_edge", 707, 727,
"ToolikGIS_MicaSense_2019", "near_ir", 800, 880,
"ToolikEDC", "red", 560, 680,
"ToolikEDC", "nir", 725, 1000
)
session_date <- "2019-06-02"
indices_new <-
## Filter for data  files
unispec_file_key %>%
filter(!is.na(Treatment)) %>%
filter(!str_detect(Treatment, "REF|DARK")) %>%
## Join to spectra data
inner_join(df_processed_new) %>%
## Format for "calculate_indices" function
unnest(Spectra) %>%
select(-ChB, -ChA, -raw_reflectance, -CorrectionFactor) %>%
rename(Reflectance = corrected_reflectance) %>%
nest(Spectra = c(Wavelength, Reflectance)) %>%
## Calculate NDVI
mutate(Indices = map(Spectra, function(x) calculate_indices(x, band_defns = band_defns,
instrument = "MODIS",
indices = c("NDVI", "EVI", "EVI2")))) %>%
arrange(DateTime)
source("UnispecProtocol/unispec_protocol_functions.R") # file loads required functions
getwd()
source("/home/ruby/UnispecR/UnispecProtocol/unispec_protocol_functions.R") # file loads required functions
indices_new <-
## Filter for data  files
unispec_file_key %>%
filter(!is.na(Treatment)) %>%
filter(!str_detect(Treatment, "REF|DARK")) %>%
## Join to spectra data
inner_join(df_processed_new) %>%
## Format for "calculate_indices" function
unnest(Spectra) %>%
select(-ChB, -ChA, -raw_reflectance, -CorrectionFactor) %>%
rename(Reflectance = corrected_reflectance) %>%
nest(Spectra = c(Wavelength, Reflectance)) %>%
## Calculate NDVI
mutate(Indices = map(Spectra, function(x) calculate_indices(x, band_defns = band_defns,
instrument = "MODIS",
indices = c("NDVI", "EVI", "EVI2")))) %>%
arrange(DateTime)
indices_new
indices_new$Indices[3]
## SAVE UPDATED INDICES
indices_all <- index_data %>%
rename(ScanNum = Replicate, ScanLocation = Location) %>%
select(spu_filename, DateTime, Date, Site, Block, Treatment, ScanNum, ScanLocation, FileNum, Notes, Weather, Type, ref_filenames, Spectra, Indices) %>%
bind_rows(indices_new) %>%
## Format to save to long-term record
select(spu_filename, DateTime, Indices) %>%
unnest(Indices) %>%
## fill in gaps
# mutate(BandDefinition = "MODIS") %>%
# select(spu_filename, DateTime, Index, BandDefinition, Value) %>%
arrange(DateTime)
index_data
indices_new
indices_new
indices_new_formatted <- indices_new %>% select(spu_filename, DateTime, Indices)
indices_new
indices_new_formatted
index_data
indices_new_formatted <- indices_new %>% select(spu_filename, DateTime, Indices) %>% unnest(Indices)
indices_new_formatted
## SAVE UPDATED INDICES
indices_all <- index_data %>%
# rename(ScanNum = Replicate, ScanLocation = Location) %>%
# select(spu_filename, DateTime, Date, Site, Block, Treatment, ScanNum, ScanLocation, FileNum, Notes, Weather, Type, ref_filenames, Spectra, Indices) %>%
bind_rows(indices_new) %>%
## Format to save to long-term record
select(spu_filename, DateTime, Indices) %>%
unnest(Indices) %>%
## fill in gaps
# mutate(BandDefinition = "MODIS") %>%
# select(spu_filename, DateTime, Index, BandDefinition, Value) %>%
arrange(DateTime)
indices_all
## SAVE UPDATED INDICES
indices_all <- index_data %>%
# rename(ScanNum = Replicate, ScanLocation = Location) %>%
# select(spu_filename, DateTime, Date, Site, Block, Treatment, ScanNum, ScanLocation, FileNum, Notes, Weather, Type, ref_filenames, Spectra, Indices) %>%
# bind_rows(indices_new) %>%
#
# ## Format to save to long-term record
# select(spu_filename, DateTime, Indices) %>%
# unnest(Indices) %>%
# ## fill in gaps
# # mutate(BandDefinition = "MODIS") %>%
# # select(spu_filename, DateTime, Index, BandDefinition, Value) %>%
arrange(DateTime)
indices_all
indices_new
indices_all
indices_all %>% summary()
indices_all %>% filter(is.na(Value))
indices_all %>% filter(is.na(Value)) %>% left_join(unispec_key_fix)
indices_all %>% filter(is.na(Value)) %>% left_join(unispec_file_key)
index_filename <- paste0(data_path, dir_year, "_index_data.csv")
index_filename
write_csv(indices_all, index_filename)
## Index Data
index_filename <- paste0(data_path, dir_year, "_index_data.csv")
index_data <- read_csv(index_filename)
## Index Data summary
left_join(inde_data, spu_key) %>%   group_by(Date, Site) %>%
summarize(Files = n_distinct(spu_filename)) %>%
kable()
## Index Data summary
left_join(index_data, spu_key) %>%   group_by(Date, Site) %>%
summarize(Files = n_distinct(spu_filename)) %>%
kable()
## Index Data summary
left_join(index_data, spu_key) %>%   group_by(Date, Site) %>%
summarize(Files = n_distinct(spu_filename), Treatments = str_c(unique(Treatment), collapse = ",")) %>%
kable()
## Index Data summary
left_join(index_data, spu_key) %>%   group_by(Date, Site) %>% left_join(unispec_file_key) %>%
summarize(Files = n_distinct(spu_filename), Treatments = str_c(unique(Treatment), collapse = ",")) %>%
kable()
## Index Data summary
left_join(index_data, spu_key) %>%   group_by(Date, Site) %>% left_join(unispec_file_key %>% select(-Date)) %>%
summarize(Files = n_distinct(spu_filename), Treatments = str_c(unique(Treatment), collapse = ",")) %>%
kable()
## Index Data summary
left_join(index_data, spu_key) %>%   group_by(Date, Site) %>% left_join(unispec_file_key %>% select(-Date)) %>%
summarize(Files = n_distinct(spu_filename), Blocks = str_c(unique(Block), collapse = ","), Treatments = str_c(unique(Treatment), collapse = ",")) %>%
kable()
library(tidyverse)
library(lubridate)
library(rChoiceDialogs)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
## use the params$data_path as starting folder
data_path <- params$data_path
## Index Data summary
left_join(index_data, spu_key) %>%   group_by(Date, Site) %>% left_join(unispec_file_key %>% select(-Date)) %>%
summarize(Files = n_distinct(spu_filename), Blocks = str_c(unique(Block), collapse = ","), Treatments = str_c(unique(Treatment), collapse = ",")) %>%
kable()
## Index Data summary
left_join(index_data, spu_key) %>%   group_by(Date, Site) %>% left_join(unispec_file_key %>% select(-Date)) %>%
summarize(Files = n_distinct(spu_filename), Blocks = str_c(order(unique(Block)), collapse = ","), Treatments = str_c(unique(Treatment), collapse = ",")) %>%
kable()
## Index Data summary
left_join(index_data, spu_key) %>%   group_by(Date, Site) %>% left_join(unispec_file_key %>% select(-Date)) %>%
summarize(Files = n_distinct(spu_filename), Blocks = str_c(arrange(unique(Block)), collapse = ","), Treatments = str_c(unique(Treatment), collapse = ",")) %>%
kable()
order
?order
## Index Data summary
left_join(index_data, spu_key) %>%   group_by(Date, Site) %>% left_join(unispec_file_key %>% select(-Date)) %>%
summarize(Files = n_distinct(spu_filename), Blocks = str_c(order(unique(Block)), collapse = ","), Treatments = str_c(order(unique(Treatment)), collapse = ",")) %>%
kable()
## Index Data summary
left_join(index_data, spu_key) %>%   group_by(Date, Site) %>% left_join(unispec_file_key %>% select(-Date)) %>%
summarize(Files = n_distinct(spu_filename), Blocks = str_c(order(unique(Block)), collapse = ","), Treatments = str_c(sort(unique(Treatment)), collapse = ",")) %>%
kable()
## Index Data summary
left_join(index_data, spu_key) %>%   group_by(Date, Site) %>% left_join(unispec_file_key %>% select(-Date)) %>%
summarize(Files = n_distinct(spu_filename), Blocks = str_c(sort(unique(Block)), collapse = ","), Treatments = str_c(sort(unique(Treatment)), collapse = ",")) %>%
kable()
View(spu_dataframe)
index_data
processed_spectra) %>%
df_analysis <- unispec_file_key %>% left_join(processed_spectra) %>%
left_join(index_data %>% nest(Indices = "Index", "BandDefinition", "Value"))
indices <- index_data %>% nest(Indices = "Index", "BandDefinition", "Value")
left_join(index_data %>% nest(Indices = c("Index", "BandDefinition", "Value"))
indices <-
df_analysis <- unispec_file_key %>% left_join(processed_spectra) %>%
left_join(index_data %>% nest(Indices = c("Index", "BandDefinition", "Value")))
df_analysis
df_analysis <- unispec_file_key %>% left_join(processed_spectra) %>%
left_join(index_data %>% nest(Indices = c("Index", "BandDefinition", "Value"))) %>%
mutate(Year = lubridate::year(Date), DOY = lubridate::yday(Date)) %>%
select(spu_filename, Year, Date, DOY, DateTime, Site, Block, Treatment, ScanNum, ScanLocation, Plot.x, PLot.y, FileNum, Notes, Weather, Type, ref_filenames, Spectra, Indices)
df_analysis <- unispec_file_key %>% left_join(processed_spectra) %>%
left_join(index_data %>% nest(Indices = c("Index", "BandDefinition", "Value"))) %>%
mutate(Year = lubridate::year(Date), DOY = lubridate::yday(Date)) %>%
select(spu_filename, Year, Date, DOY, DateTime, Site, Block, Treatment, ScanNum, ScanLocation, Plot.x, Plot.y, FileNum, Notes, Weather, Type, ref_filenames, Spectra, Indices)
df_analysis <- unispec_file_key %>% left_join(processed_spectra) %>%
left_join(spu_key) %>%
left_join(index_data %>% nest(Indices = c("Index", "BandDefinition", "Value"))) %>%
mutate(Year = lubridate::year(Date), DOY = lubridate::yday(Date)) %>%
select(spu_filename, Spectra, Indices, Year, Date, DOY, DateTime, Site, Block, Treatment, ScanNum, ScanLocation, Plot.x, Plot.y, FileNum, Notes, Weather, Type, ref_filenames, everything())
df_analysis <- unispec_file_key %>% left_join(processed_spectra) %>%
left_join(spu_key) %>%
left_join(index_data %>% nest(Indices = c("Index", "BandDefinition", "Value"))) %>%
mutate(Year = lubridate::year(Date), DOY = lubridate::yday(Date)) %>%
select(spu_filename, Spectra, Indices, Year, Date, DOY, DateTime, Site, Block, Treatment, ScanNum, ScanLocation, Plot.x, Plot.y, FileNum, Notes, Weather, Type, ref_filenames, everything())
df_analysis <- unispec_file_key %>% left_join(processed_spectra) %>%
left_join(spu_key %>% select(-Date)) %>%
left_join(index_data %>% nest(Indices = c("Index", "BandDefinition", "Value"))) %>%
mutate(Year = lubridate::year(Date), DOY = lubridate::yday(Date)) %>%
select(spu_filename, Spectra, Indices, Year, Date, DOY, DateTime, Site, Block, Treatment, ScanNum, ScanLocation, Plot.x, Plot.y, FileNum, Notes, Weather, Type, ref_filenames, everything())
df_analysis
df_analysis <- unispec_file_key %>% left_join(processed_spectra) %>%
left_join(spu_key %>% select(-Date)) %>%
left_join(index_data %>% nest(Indices = c("Index", "BandDefinition", "Value"))) %>%
mutate(Year = lubridate::year(Date), DOY = lubridate::yday(Date)) %>%
select(spu_filename, Spectra, Indices, Year, Date, DOY, DateTime, Site, Block, Treatment, ScanNum, ScanLocation, Plot.x, Plot.y, FileNum, Notes, Weather, Type, ref_filenames, Integration_ms, Temp, Remarks)
df_analysis <- index_data %>% nest(Indices = c("Index", "BandDefinition", "Value")) %>%
left_join(processed_spectra) %>%
left_join(unispec_file_key) %>% arrange(DateTime)
df_analysis
## Dataframe for analysis
df_analysis <- index_data %>% nest(Indices = c("Index", "BandDefinition", "Value")) %>%
left_join(processed_spectra) %>%
left_join(unispec_file_key) %>% arrange(DateTime)
write_rds(df_analysis, "/home/ruby/UnispecData/2019/2019_reflectance_summaries.rds")
## Analysis dataframe summary
df_analysis %>% group_by(Date, Site) %>% left_join(unispec_file_key %>% select(-Date)) %>%
summarize(Files = n_distinct(spu_filename), Blocks = str_c(sort(unique(Block)), collapse = ","), Treatments = str_c(sort(unique(Treatment)), collapse = ",")) %>%
kable()
